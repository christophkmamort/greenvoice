# Generated by Django 3.0.10 on 2020-09-10 10:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line_1', models.CharField(blank=True, max_length=200, verbose_name='line 1')),
                ('line_2', models.CharField(blank=True, max_length=200, verbose_name='line 2')),
                ('city', models.CharField(blank=True, max_length=200, verbose_name='city')),
                ('zip', models.CharField(blank=True, max_length=200, verbose_name='postal code')),
                ('country', models.CharField(blank=True, max_length=200, verbose_name='country')),
            ],
        ),
        migrations.CreateModel(
            name='BodyMeasurements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField(blank=True, verbose_name='age')),
                ('chest', models.IntegerField(blank=True, verbose_name='chest')),
                ('hip', models.IntegerField(blank=True, verbose_name='hip')),
                ('inseam', models.IntegerField(blank=True, verbose_name='inseam')),
                ('size', models.IntegerField(blank=True, verbose_name='size')),
                ('sleeve_length', models.IntegerField(blank=True, verbose_name='sleeve length')),
                ('thigh', models.CharField(blank=True, max_length=200, verbose_name='thigh')),
                ('upper_arm', models.IntegerField(blank=True, verbose_name='upper arm')),
                ('waist', models.IntegerField(blank=True, verbose_name='waist')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'women'), (2, 'men')], null=True, verbose_name='gender')),
                ('name', models.CharField(blank=True, max_length=200, verbose_name='name')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('address', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Address', verbose_name='address')),
                ('body_measurements', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.BodyMeasurements', verbose_name='body measurements')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'ordering': ['created'],
            },
        ),
    ]
