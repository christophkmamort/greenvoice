# Generated by Django 3.0.10 on 2020-09-09 14:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('shop', '0008_auto_20200909_1426'),
        ('taxonomies', '0003_auto_20200909_1359'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnonymousUserData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, max_length=200, verbose_name='city')),
                ('country', models.CharField(blank=True, max_length=200, verbose_name='country')),
                ('gender', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'women'), (2, 'men')], verbose_name='gender')),
                ('language', models.CharField(blank=True, max_length=200, verbose_name='language')),
                ('referer', models.CharField(blank=True, max_length=200, verbose_name='referer')),
                ('state', models.CharField(blank=True, max_length=200, verbose_name='state')),
                ('body_measurements', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.BodyMeasurements', verbose_name='body measurements')),
            ],
        ),
        migrations.CreateModel(
            name='BaseValueLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.PositiveSmallIntegerField(choices=[(1, 'click'), (2, 'wishlist'), (3, 'cart'), (4, 'order')], default=1, verbose_name='action')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='logs.AnonymousUserData', verbose_name='anonymous user data')),
            ],
        ),
        migrations.CreateModel(
            name='TaxonomyValueLog',
            fields=[
                ('basevaluelog_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='logs.BaseValueLog')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='taxonomies.Category', verbose_name='category')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='taxonomies.Color', verbose_name='color')),
                ('size', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='taxonomies.Size', verbose_name='size')),
            ],
            bases=('logs.basevaluelog',),
        ),
        migrations.CreateModel(
            name='ProductValueLog',
            fields=[
                ('basevaluelog_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='logs.BaseValueLog')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.Product', verbose_name='product')),
                ('product_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.ProductManager', verbose_name='product manager')),
                ('product_option', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.ProductOption', verbose_name='product option')),
            ],
            bases=('logs.basevaluelog',),
        ),
        migrations.CreateModel(
            name='BrandValueLog',
            fields=[
                ('basevaluelog_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='logs.BaseValueLog')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.Brand', verbose_name='brand')),
            ],
            bases=('logs.basevaluelog',),
        ),
    ]
