# Generated by Django 3.0.9 on 2020-08-29 12:57

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line_1', models.CharField(blank=True, max_length=200, verbose_name='line 1')),
                ('line_2', models.CharField(blank=True, max_length=200, verbose_name='line 2')),
                ('city', models.CharField(blank=True, max_length=200, verbose_name='city')),
                ('zip', models.CharField(blank=True, max_length=200, verbose_name='postal code')),
                ('country', models.CharField(blank=True, max_length=200, verbose_name='country')),
            ],
        ),
        migrations.CreateModel(
            name='AnonymousUserData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, max_length=200, verbose_name='city')),
                ('country', models.CharField(blank=True, max_length=200, verbose_name='country')),
                ('gender', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'women'), (2, 'men')], verbose_name='gender')),
                ('language', models.CharField(blank=True, max_length=200, verbose_name='language')),
                ('referer', models.CharField(blank=True, max_length=200, verbose_name='referer')),
                ('state', models.CharField(blank=True, max_length=200, verbose_name='state')),
            ],
        ),
        migrations.CreateModel(
            name='BaseProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(blank=True, verbose_name='order')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
            ],
        ),
        migrations.CreateModel(
            name='BaseTaxonomy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True, verbose_name='name')),
                ('slug', models.SlugField(null=True, unique=True, verbose_name='slug')),
                ('value', models.FloatField(default=0, max_length=200, verbose_name='value')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
            ],
        ),
        migrations.CreateModel(
            name='BaseValueLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.PositiveSmallIntegerField(choices=[(1, 'click'), (2, 'wishlist'), (3, 'cart'), (4, 'order')], default=1, verbose_name='action')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
            ],
        ),
        migrations.CreateModel(
            name='BodyMeasurements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.IntegerField(blank=True, verbose_name='age')),
                ('chest', models.IntegerField(blank=True, verbose_name='chest')),
                ('hip', models.IntegerField(blank=True, verbose_name='hip')),
                ('inseam', models.IntegerField(blank=True, verbose_name='inseam')),
                ('size', models.IntegerField(blank=True, verbose_name='size')),
                ('sleeve_length', models.IntegerField(blank=True, verbose_name='sleeve length')),
                ('thigh', models.CharField(blank=True, max_length=200, verbose_name='thigh')),
                ('upper_arm', models.IntegerField(blank=True, verbose_name='upper arm')),
                ('waist', models.IntegerField(blank=True, verbose_name='waist')),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, verbose_name='name')),
                ('logo', models.ImageField(blank=True, upload_to='brands/', verbose_name='logo')),
                ('value', models.FloatField(default=0, max_length=200, verbose_name='value')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'draft'), (2, 'published'), (3, 'paused'), (4, 'retired')], default=1, verbose_name='status')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True, verbose_name='name')),
                ('slug', models.SlugField(null=True, unique=True, verbose_name='slug')),
                ('value', models.FloatField(default=0, max_length=200, verbose_name='value')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'women'), (2, 'men')], null=True, verbose_name='gender')),
                ('name', models.CharField(blank=True, max_length=200, verbose_name='name')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('address', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.Address', verbose_name='address')),
                ('body_measurements', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.BodyMeasurements', verbose_name='body measurements')),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'draft'), (2, 'ordered'), (3, 'completed')], default=1, verbose_name='status')),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.Customer', verbose_name='customer')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, verbose_name='name')),
                ('gender', models.PositiveSmallIntegerField(choices=[(1, 'unisex'), (2, 'women'), (3, 'men')], default=1, verbose_name='gender')),
                ('query', models.CharField(blank=True, max_length=200, verbose_name='queryset')),
                ('value', models.FloatField(default=0, max_length=200, verbose_name='value')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('brand', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='shop.Brand', verbose_name='brand')),
                ('category', models.ManyToManyField(blank=True, to='shop.Category', verbose_name='category')),
            ],
        ),
        migrations.CreateModel(
            name='ProductManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField(default=0, max_length=200, verbose_name='value')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.Product', verbose_name='product')),
            ],
        ),
        migrations.CreateModel(
            name='BrandValueLog',
            fields=[
                ('basevaluelog_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shop.BaseValueLog')),
            ],
            bases=('shop.basevaluelog',),
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('basetaxonomy_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shop.BaseTaxonomy')),
                ('hex', models.CharField(max_length=6, null=True, verbose_name='hex')),
            ],
            bases=('shop.basetaxonomy',),
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('basetaxonomy_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shop.BaseTaxonomy')),
            ],
            bases=('shop.basetaxonomy',),
        ),
        migrations.CreateModel(
            name='ProductBrandImage',
            fields=[
                ('baseproductimage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shop.BaseProductImage')),
                ('image', models.ImageField(blank=True, upload_to='products/brands/', verbose_name='image')),
            ],
            bases=('shop.baseproductimage',),
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('baseproductimage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shop.BaseProductImage')),
                ('image', models.ImageField(blank=True, upload_to='products/', verbose_name='image')),
            ],
            bases=('shop.baseproductimage',),
        ),
        migrations.CreateModel(
            name='ProductValueLog',
            fields=[
                ('basevaluelog_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shop.BaseValueLog')),
            ],
            bases=('shop.basevaluelog',),
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('basetaxonomy_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shop.BaseTaxonomy')),
                ('order', models.IntegerField(blank=True, verbose_name='order')),
            ],
            bases=('shop.basetaxonomy',),
        ),
        migrations.CreateModel(
            name='TaxonomyValueLog',
            fields=[
                ('basevaluelog_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='shop.BaseValueLog')),
            ],
            bases=('shop.basevaluelog',),
        ),
        migrations.CreateModel(
            name='ProductOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_number', models.CharField(blank=True, max_length=200, verbose_name='product number')),
                ('stock', models.IntegerField(blank=True, default=0, verbose_name='stock')),
                ('gross', models.FloatField(blank=True, verbose_name='price gross')),
                ('tax', models.FloatField(blank=True, verbose_name='price tax')),
                ('net', models.FloatField(blank=True, verbose_name='price net')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'draft'), (2, 'published'), (3, 'paused'), (4, 'retired')], default=1, verbose_name='status')),
                ('value', models.FloatField(default=0, max_length=200, verbose_name='value')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('product_manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.ProductManager', verbose_name='product')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0, null=True, verbose_name='quantity')),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.Customer', verbose_name='customer')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items', to='shop.Order', verbose_name='order')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.Product', verbose_name='product')),
            ],
        ),
    ]
